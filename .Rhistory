starts_with('delay_')
)
df_epi <-
df %>%
mutate(
delay_onset_facility = DateSeenHealthFacility - DateOfonset,
delay_facility_collect = DateSpecimencollected - DateSeenHealthFacility,
delay_collect_lab = DateSpecimenSenttolab - DateSpecimencollected,
delay_lab_received = DateLabReceivedSpecimen - DateSpecimenSenttolab,
delay_received_results = DateLabSentresulttodistrict - DateLabReceivedSpecimen,
delay_total = DateLabSentresulttodistrict - DateOfonset
) %>%
select(
one_of('ProvinceOfresidence', 'Urbanrural'),
starts_with('delay_')
)
df_epi
ggplot(filter(df, FinalClassification %in% 1)) +
geom_bar(aes(x = DateOfonset))
ggplot(df_epi) +
geom_point()
ggplot(df_epi) +
geom_point(aes(x = ProvinceOfresidence, y = delay_onset_facility))
?geom_point
ggplot(df_epi) +
geom_jitter(aes(x = ProvinceOfresidence, y = delay_onset_facility))
ggplot(df_epi) +
geom_jitter(aes(x = ProvinceOfresidence, y = delay_onset_facility, fill = ProvinceOfresidence))
ggplot(df_epi) +
geom_jitter(aes(x = ProvinceOfresidence, y = delay_onset_facility, colour = ProvinceOfresidence))
ggplot(
filter(df_epi, delay_onset_facility >= 0)
) +
geom_jitter(aes(x = ProvinceOfresidence, y = delay_onset_facility, colour = ProvinceOfresidence))
ggplot(
filter(df_epi, delay_onset_facility >= 0)
) +
geom_jitter(aes(x = ProvinceOfresidence, y = delay_onset_facility, colour = ProvinceOfresidence)) +
# facet_wrap(~ ProvinceOfresidence)
theme_bw()
ggplot(
filter(df_epi, delay_onset_facility >= 0)
) +
geom_jitter(aes(x = ProvinceOfresidence, y = delay_onset_facility, colour = ProvinceOfresidence)) +
# facet_wrap(~ ProvinceOfresidence)
theme_bw() +
coord_flip()
ggplot(
filter(df_epi, delay_onset_facility >= 0)
) +
geom_jitter(aes(x = ProvinceOfresidence, y = delay_onset_facility, colour = ProvinceOfresidence)) +
facet_wrap(~ ProvinceOfresidence)
ggplot(
filter(df_epi, delay_onset_facility >= 0)
) +
geom_jitter(aes(x = ProvinceOfresidence, y = delay_onset_facility, colour = ProvinceOfresidence)) +
facet_wrap(~ ProvinceOfresidence) +
theme_bw() +
coord_flip()
ggplot(
filter(df_epi, delay_onset_facility >= 0)
) +
# geom_jitter(aes(x = ProvinceOfresidence, y = delay_onset_facility, colour = ProvinceOfresidence)) +
geom_jitter(aes(x = Urbanrural, y = delay_onset_facility, colour = ProvinceOfresidence)) +
facet_wrap(~ ProvinceOfresidence) +
theme_bw() +
coord_flip()
ggplot(
filter(df_epi, delay_onset_facility >= 0)
) +
# geom_jitter(aes(x = ProvinceOfresidence, y = delay_onset_facility, colour = ProvinceOfresidence)) +
geom_jitter(aes(x = Urbanrural, y = delay_onset_facility, colour = Urbanrural)) +
facet_wrap(~ ProvinceOfresidence) +
theme_bw() +
coord_flip()
ggplot(
filter(df_epi, delay_onset_facility >= 0)
) +
# geom_jitter(aes(x = ProvinceOfresidence, y = delay_onset_facility, colour = ProvinceOfresidence)) +
geom_jitter(aes(x = Urbanrural, y = delay_onset_facility, colour = Urbanrural), width = 30) +
facet_wrap(~ ProvinceOfresidence) +
theme_bw() +
coord_flip()
ggplot(
filter(df_epi, delay_onset_facility >= 0)
) +
# geom_jitter(aes(x = ProvinceOfresidence, y = delay_onset_facility, colour = ProvinceOfresidence)) +
geom_jitter(aes(x = Urbanrural, y = delay_onset_facility, colour = Urbanrural), width = .3) +
facet_wrap(~ ProvinceOfresidence) +
theme_bw() +
coord_flip()
df_epi_long <-
df %>%
mutate(
delay_onset_facility = DateSeenHealthFacility - DateOfonset,
delay_facility_collect = DateSpecimencollected - DateSeenHealthFacility,
delay_collect_lab = DateSpecimenSenttolab - DateSpecimencollected,
delay_lab_received = DateLabReceivedSpecimen - DateSpecimenSenttolab,
delay_received_results = DateLabSentresulttodistrict - DateLabReceivedSpecimen,
delay_total = DateLabSentresulttodistrict - DateOfonset
) %>%
select(
one_of('ProvinceOfresidence', 'Urbanrural'),
starts_with('delay_')
)
df_epi_long
?tidyr::gather
df_epi_long
df %>%
mutate(
delay_onset_facility = DateSeenHealthFacility - DateOfonset,
delay_facility_collect = DateSpecimencollected - DateSeenHealthFacility,
delay_collect_lab = DateSpecimenSenttolab - DateSpecimencollected,
delay_lab_received = DateLabReceivedSpecimen - DateSpecimenSenttolab,
delay_received_results = DateLabSentresulttodistrict - DateLabReceivedSpecimen,
delay_total = DateLabSentresulttodistrict - DateOfonset
) %>%
select(
one_of('ProvinceOfresidence', 'Urbanrural'),
starts_with('delay_')
) %>%
tidyr::gather(key, value, starts_with('delay')
)
df_epi_long <-
df %>%
mutate(
delay_onset_facility = DateSeenHealthFacility - DateOfonset,
delay_facility_collect = DateSpecimencollected - DateSeenHealthFacility,
delay_collect_lab = DateSpecimenSenttolab - DateSpecimencollected,
delay_lab_received = DateLabReceivedSpecimen - DateSpecimenSenttolab,
delay_received_results = DateLabSentresulttodistrict - DateLabReceivedSpecimen,
delay_total = DateLabSentresulttodistrict - DateOfonset
) %>%
select(
one_of('ProvinceOfresidence', 'Urbanrural'),
starts_with('delay_')
) %>%
tidyr::gather(key, value, starts_with('delay'))
df_epi_long
tail(df_epi_long)
ggplot(df_epi_long) +
# geom_jitter(aes(x = ProvinceOfresidence, y = delay_onset_facility, colour = ProvinceOfresidence)) +
geom_jitter(aes(x = Urbanrural, y = value), width = .3) +
facet_wrap(~ key) +
theme_bw() +
coord_flip()
ggplot(
filter(df_epi_long, value < 200, value >=0)
) +
# geom_jitter(aes(x = ProvinceOfresidence, y = delay_onset_facility, colour = ProvinceOfresidence)) +
geom_jitter(aes(x = Urbanrural, y = value), width = .3) +
facet_wrap(~ key) +
theme_bw() +
coord_flip()
ggplot(
filter(df_epi_long, value < 200, value >=0)
) +
# geom_jitter(aes(x = ProvinceOfresidence, y = delay_onset_facility, colour = ProvinceOfresidence)) +
geom_jitter(aes(x = Urbanrural, y = value, colour = ProvinceOfresidence), width = .3) +
facet_wrap(~ key) +
theme_bw() +
coord_flip()
df_epi_long
ggplot(
filter(df_epi_long, value < 200, value >=0)
) +
# geom_jitter(aes(x = ProvinceOfresidence, y = delay_onset_facility, colour = ProvinceOfresidence)) +
geom_jitter(aes(x = Urbanrural, y = value, colour = ProvinceOfresidence), width = .3, alpha = 0.6) +
facet_wrap(~ key) +
theme_bw() +
coord_flip()
ggplot(
filter(df_epi_long, value < 200, value >=0)
) +
# geom_jitter(aes(x = ProvinceOfresidence, y = delay_onset_facility, colour = ProvinceOfresidence)) +
geom_jitter(aes(x = Urbanrural, y = value, colour = ProvinceOfresidence), width = .4, alpha = 0.6) +
facet_wrap(~ key) +
theme_bw() +
coord_flip()
ggplot(
filter(df_epi_long, value < 200, value >=0)
) +
# geom_jitter(aes(x = ProvinceOfresidence, y = delay_onset_facility, colour = ProvinceOfresidence)) +
geom_jitter(aes(x = Urbanrural, y = value, colour = ProvinceOfresidence), width = .4, alpha = 0.6) +
facet_wrap(~ key) +
theme_bw() +
coord_flip() %>%
plotly::ggplotly()
p <-
ggplot(
filter(df_epi_long, value < 200, value >=0)
) +
# geom_jitter(aes(x = ProvinceOfresidence, y = delay_onset_facility, colour = ProvinceOfresidence)) +
geom_jitter(aes(x = Urbanrural, y = value, colour = ProvinceOfresidence), width = .4, alpha = 0.6) +
facet_wrap(~ key) +
theme_bw() +
coord_flip()
plotly::ggplotly(p)
df_epi_long <-
df %>%
mutate(
delay_onset_facility = DateSeenHealthFacility - DateOfonset,
delay_facility_collect = DateSpecimencollected - DateSeenHealthFacility,
delay_collect_lab = DateSpecimenSenttolab - DateSpecimencollected,
delay_lab_received = DateLabReceivedSpecimen - DateSpecimenSenttolab,
delay_received_results = DateLabSentresulttodistrict - DateLabReceivedSpecimen,
delay_total = DateLabSentresulttodistrict - DateOfonset
) %>%
select(
matches('Kinshasa|KINSHASA'),
one_of('ProvinceOfresidence', 'Urbanrural'),
starts_with('delay_')
) %>%
tidyr::gather(key, value, starts_with('delay'))
p <-
ggplot(
filter(df_epi_long, value < 200, value >=0)
) +
# geom_jitter(aes(x = ProvinceOfresidence, y = delay_onset_facility, colour = ProvinceOfresidence)) +
geom_jitter(aes(x = Urbanrural, y = value, colour = ProvinceOfresidence), width = .4, alpha = 0.6) +
facet_wrap(~ key) +
theme_bw() +
coord_flip()
plotly::ggplotly(p)
df_epi_long
df_epi_long <-
df %>%
mutate(
delay_onset_facility = DateSeenHealthFacility - DateOfonset,
delay_facility_collect = DateSpecimencollected - DateSeenHealthFacility,
delay_collect_lab = DateSpecimenSenttolab - DateSpecimencollected,
delay_lab_received = DateLabReceivedSpecimen - DateSpecimenSenttolab,
delay_received_results = DateLabSentresulttodistrict - DateLabReceivedSpecimen,
delay_total = DateLabSentresulttodistrict - DateOfonset
) %>%
select(
matches('Kinshasa', 'KINSHASA'),
one_of('ProvinceOfresidence', 'Urbanrural'),
starts_with('delay_')
) %>%
tidyr::gather(key, value, starts_with('delay'))
p <-
ggplot(
filter(df_epi_long, value < 200, value >=0)
) +
# geom_jitter(aes(x = ProvinceOfresidence, y = delay_onset_facility, colour = ProvinceOfresidence)) +
geom_jitter(aes(x = Urbanrural, y = value, colour = ProvinceOfresidence), width = .4, alpha = 0.6) +
facet_wrap(~ key) +
theme_bw() +
coord_flip()
plotly::ggplotly(p)
?select
df_epi_long <-
df %>%
mutate(
delay_onset_facility = DateSeenHealthFacility - DateOfonset,
delay_facility_collect = DateSpecimencollected - DateSeenHealthFacility,
delay_collect_lab = DateSpecimenSenttolab - DateSpecimencollected,
delay_lab_received = DateLabReceivedSpecimen - DateSpecimenSenttolab,
delay_received_results = DateLabSentresulttodistrict - DateLabReceivedSpecimen,
delay_total = DateLabSentresulttodistrict - DateOfonset
) %>%
select(
contains('Kinshasa', 'KINSHASA'),
one_of('ProvinceOfresidence', 'Urbanrural'),
starts_with('delay_')
) %>%
tidyr::gather(key, value, starts_with('delay'))
p <-
ggplot(
filter(df_epi_long, value < 200, value >=0)
) +
# geom_jitter(aes(x = ProvinceOfresidence, y = delay_onset_facility, colour = ProvinceOfresidence)) +
geom_jitter(aes(x = Urbanrural, y = value, colour = ProvinceOfresidence), width = .4, alpha = 0.6) +
facet_wrap(~ key) +
theme_bw() +
coord_flip()
plotly::ggplotly(p)
df %>%
mutate(
delay_onset_facility = DateSeenHealthFacility - DateOfonset,
delay_facility_collect = DateSpecimencollected - DateSeenHealthFacility,
delay_collect_lab = DateSpecimenSenttolab - DateSpecimencollected,
delay_lab_received = DateLabReceivedSpecimen - DateSpecimenSenttolab,
delay_received_results = DateLabSentresulttodistrict - DateLabReceivedSpecimen,
delay_total = DateLabSentresulttodistrict - DateOfonset
) %>%
select(
# contains('Kinshasa', 'KINSHASA'),
one_of('ProvinceOfresidence', 'Urbanrural'),
starts_with('delay_')
)
df_epi_long <-
df %>%
filter(
ProvinceOfresidence %in% c('Kwango', 'Kinshasa', 'KINSHASA', 'Kongo Central', 'Kwango')
)
df_epi_long <-
df %>%
filter(
ProvinceOfresidence %in% c('Kwango', 'Kinshasa', 'KINSHASA', 'Kongo Central', 'Kwango')
) %>%
mutate(
delay_onset_facility = DateSeenHealthFacility - DateOfonset,
delay_facility_collect = DateSpecimencollected - DateSeenHealthFacility,
delay_collect_lab = DateSpecimenSenttolab - DateSpecimencollected,
delay_lab_received = DateLabReceivedSpecimen - DateSpecimenSenttolab,
delay_received_results = DateLabSentresulttodistrict - DateLabReceivedSpecimen,
delay_total = DateLabSentresulttodistrict - DateOfonset
) %>%
select(
one_of('ProvinceOfresidence', 'Urbanrural'),
starts_with('delay_')
) %>%
tidyr::gather(key, value, starts_with('delay'))
p <-
ggplot(
filter(df_epi_long, value < 200, value >=0)
) +
# geom_jitter(aes(x = ProvinceOfresidence, y = delay_onset_facility, colour = ProvinceOfresidence)) +
geom_jitter(aes(x = Urbanrural, y = value, colour = ProvinceOfresidence), width = .4, alpha = 0.6) +
facet_wrap(~ key) +
theme_bw() +
coord_flip()
plotly::ggplotly(p)
p <-
ggplot(
filter(df_epi_long, value < 200, value >=0)
) +
geom_jitter(aes(x = ProvinceOfresidence, y = value, colour = Urbanrural)) +
# geom_jitter(aes(x = Urbanrural, y = value, colour = ProvinceOfresidence), width = .4, alpha = 0.6) +
facet_wrap(~ key) +
theme_bw() +
coord_flip()
plotly::ggplotly(p)
df_epi_long
p <-
ggplot(
filter(df_epi_long, value < 200, value >=0)
) +
geom_jitter(aes(x = ProvinceOfresidence, y = value, colour = Urbanrural)) +
facet_wrap(ProvinceOfresidence) +
# geom_jitter(aes(x = Urbanrural, y = value, colour = ProvinceOfresidence), width = .4, alpha = 0.6) +
# facet_wrap(~ key) +
theme_bw() +
coord_flip()
plotly::ggplotly(p)
p <-
ggplot(
filter(df_epi_long, value < 200, value >=0)
) +
geom_jitter(aes(x = ProvinceOfresidence, y = value, colour = Urbanrural)) +
# facet_wrap(ProvinceOfresidence) +
# geom_jitter(aes(x = Urbanrural, y = value, colour = ProvinceOfresidence), width = .4, alpha = 0.6) +
# facet_wrap(~ key) +
theme_bw() +
coord_flip()
plotly::ggplotly(p)
ggplot(
filter(df_epi_long, value < 200, value >=0)
) +
geom_jitter(aes(x = ProvinceOfresidence, y = value, colour = Urbanrural))
p <-
ggplot(
filter(df_epi_long, value < 200, value >=0)
) +
geom_jitter(aes(x = ProvinceOfresidence, y = value, colour = Urbanrural), na.value = grey) +
facet_wrap(ProvinceOfresidence) +
# geom_jitter(aes(x = Urbanrural, y = value, colour = ProvinceOfresidence), width = .4, alpha = 0.6) +
# facet_wrap(~ key) +
theme_bw() +
coord_flip()
ggplot(
filter(df_epi_long, value < 200, value >=0)
) +
geom_jitter(aes(x = ProvinceOfresidence, y = value, colour = Urbanrural)) +
facet_wrap(ProvinceOfresidence)
p <-
ggplot(
filter(df_epi_long, value < 200, value >=0)
) +
geom_jitter(aes(x = ProvinceOfresidence, y = value, colour = Urbanrural)) +
facet_wrap(~ ProvinceOfresidence) +
# geom_jitter(aes(x = Urbanrural, y = value, colour = ProvinceOfresidence), width = .4, alpha = 0.6) +
# facet_wrap(~ key) +
theme_bw() +
coord_flip()
plotly::ggplotly(p)
ggplot(
filter(df_epi_long, value < 200, value >=0)
) +
geom_jitter(aes(x = ProvinceOfresidence, y = value, colour = Urbanrural)) +
facet_wrap(~ ProvinceOfresidence)
p
plotly::ggplotly(p)
p <-
ggplot(
filter(df_epi_long, value < 200, value >=0)
) +
geom_jitter(aes(x = key, y = value, colour = Urbanrural)) +
facet_wrap(~ ProvinceOfresidence) +
# geom_jitter(aes(x = Urbanrural, y = value, colour = ProvinceOfresidence), width = .4, alpha = 0.6) +
# facet_wrap(~ key) +
theme_bw() +
coord_flip()
p
plotly::ggplotly(p)
df_epi_long
ggplot(
filter(df_epi_long, value < 200, value >=0)
) +
geom_histogram(aes(x = value))
ggplot(
filter(df_epi_long, value < 200, value >=0)
) +
geom_histogram(aes(x = value, y = ..density..))
ggplot(
filter(df_epi_long, value < 200, value >=0)
) +
geom_histogram(aes(x = value, y = ...density...))
ggplot(
filter(df_epi_long, value < 200, value >=0)
) +
geom_histogram(aes(x = value, y = ..density..))
ggplot(
filter(df_epi_long, value < 200, value >=0)
) +
geom_bar(aes(x = value, y = ..density..))
ggplot(
filter(df_epi_long, value < 200, value >=0)
) +
geom_density(aes(x = value, y = ..density..))
ggplot(
filter(df_epi_long, value < 200, value >=0)
) +
geom_density(aes(x = value, y = ..density.., colour = key))
ggplot(
filter(df_epi_long, value < 200, value >=0)
) +
geom_density(aes(x = value, y = ..density.., fill = key))
ggplot(
filter(df_epi_long, value < 200, value >=0)
) +
geom_density(aes(x = value, y = ..density.., fill = key), alpha = 0.5)
ggplot(
filter(df_epi_long, value < 200, value >=0)
) +
geom_density(aes(x = value, y = ..density.., fill = key), alpha = 0.5) +
facet_wrap(~ ProvinceOfresidence) +
theme_bw()
ggplot(
filter(df_epi_long, value < 200, value >=0)
) +
geom_density(aes(x = value, y = ..density.., fill = key), alpha = 0.5) +
facet_wrap(~ ProvinceOfresidence) +
theme_bw() %>%
plotly::ggplotly()
(
ggplot(
filter(df_epi_long, value < 200, value >=0)
) +
geom_density(aes(x = value, y = ..density.., fill = key), alpha = 0.5) +
facet_wrap(~ ProvinceOfresidence) +
theme_bw()
) %>%
plotly::ggplotly()
install.packages("forcats")
??focats
??forcats
install.packages(c("curl", "DBI", "ezknitr", "forcats", "jsonlite", "lubridate", "packrat", "R.utils", "Rcpp", "rgeos", "shiny"))
shiny::runApp('app')
shiny::runApp('app')
library(dplyr)
library(tidyr)
library(ggplot2)
filename <- dir('app/data', full.names = TRUE) %>% stringr::str_subset('.MDB')
df <- Hmisc::mdb.get(filename) %>% tbl_df
glimpse(df)
unique(df$MALADIE)
df_tmp <-
df %>%
mutate(
date = as.Date(DEBUTSEM, format = '%m/%d/%y'),
month_year = format(date, "%b-%y"),
month = lubridate::month(date, label = TRUE)
) %>%
filter(
MALADIE %in% c('FIEVRE JAUNE', 'CHOLERA'),
date <= Sys.Date(),
date >= as.Date('2016-01-01')
) %>%
select_(.dots = c('PROV', 'ZS', 'POP', 'date', 'month_year', 'month', 'MALADIE', 'TOTALCAS', 'TOTALDECES')) %>%
arrange(MALADIE, date)
df_tmp2 <-
df_tmp %>%
group_by(MALADIE, PROV, month_year, month) %>%
summarise(n = sum(TOTALCAS, na.rm = TRUE)) %>%
ungroup %>%
select(-month_year) %>%
arrange(MALADIE, PROV, month)
p <-
ggplot(df_tmp2) +
geom_bar(aes(x = month, y = n, fill = MALADIE), stat = 'identity') +
theme_bw() +
facet_wrap(~ PROV)
p
p <-
ggplot(df_tmp2) +
geom_line(aes(x = month, y = n, group = MALADIE, colour = MALADIE), stat = 'identity') +
theme_bw() +
facet_wrap(~ PROV)
p
